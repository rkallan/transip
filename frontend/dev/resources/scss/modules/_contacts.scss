.contacts {
  &.container {
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    height: 100%;
    margin: 0;
    @include setPropWithRemAndPx(225, padding-left);
  }
}

.navigation {
  &.container {
    position: fixed;
    @include setPropWithRemAndPx(225, width);
    height: 100%;
    background-color: $color-blue-light;
    margin: 0;
    left: 0;
    top: 0;
  }
  &.unit {
    display: flex;
    flex-direction: column;
    li {
      a {
        display: flex;
        flex-flow: column wrap;
        justify-content: center;
        align-content: center;
        align-items: center;
        text-align: center;
        color: $color-black;
        transition: all 0.3s ease;
        @include setPropWithRemAndPx(225, height);
        .icon {
          transition: all 0.3s ease;
          text-align: center;
          @include setPropWithRemAndPx(map-get($grid, gutter) / 2, margin-bottom);
          @include setPropWithRemAndPx(50, (width, height));
          svg {
            width: 100%;
            height: 100%;
            path {
              fill: $color-black;
            }
          }
        }
        &:hover {
          font-weight: 700;
          text-decoration: none;
          .icon {
            transform: scale(1.3);
          }
        }
        &[variant~="is-active"] {
          color: $color-gray;
          background-color: $color-blue-lighter;
          .icon {
            svg {
              path {
                fill: $color-gray;
              }
            }
          }
        }
      }
    }
  }
}

.contact-button {
  &[variant~="contact-button"] {
    &.container {
      position: fixed;
      right: 0;
      bottom: 0;
      width: 0;
      @include setPropWithRemAndPx(130, (height));
      z-index: 10;
      background-color: $color-gray-darker;
    }
  }
  &.unit {
    display: flex;
    flex-direction: column;
    height: 100%;
    li {
      height: 100%;
      &.flex-auto {
        flex: auto;
      }
      a,
      button {
        height: 100%;
        display: flex;
        flex-flow: column wrap;
        justify-content: center;
        align-content: center;
        font-size: 21px;
        align-items: center;
        text-align: center;
        height: 100%;
        color: $color-white;
        transition: all 0.3s ease;
        border: 0;
        background: transparent;
        .icon {
          transition: all 0.3s ease;
          text-align: center;
          width: 40px;
          height: 40px;
          @include setPropWithRemAndPx(map-get($grid, gutter) / 2, margin-bottom);
          @include setPropWithRemAndPx(map-get($grid, gutter), margin-bottom);
          @include setPropWithRemAndPx(40, (width, height));
          svg {
            width: 100%;
            height: 100%;
            path {
              fill: $color-white;
            }
          }
        }
        &:hover {
          font-weight: 700;
          text-decoration: none;
          .icon {
            transform: scale(1.3);
          }
        }
      }
    }
  }
}

.contact-list-items {
  &.container {
    position: relative;
    flex: 1;
    height: 100%;
    overflow: hidden;
    .contact-button {
      &[variant~="contact-button"] {
        position: fixed;
        @include setPropWithRemAndPx(225, left);
        width: 0;
        transition: all 0.1s ease;
      }
    }
  }
  &.unit {
    position: fixed;
    height: 100%;
    @include setPropWithRemAndPx(60, (padding-top: 60, padding-bottom: 130, left: 225));
    top: 0;
    overflow: auto;
    overflow-x: hidden;
    z-index: 5;
  }
  .contact-list-search {
    &.container {
      position: fixed;
      width: 0;
      top: 0;
      left: 0;
      @include setPropWithRemAndPx(225, left);
      z-index: 10;
      background-color: $color-white;
    }
    &.unit {}
  }
}

.contact-list-item {
  &.wrapper {
    &:nth-child(odd) {
      background-color: $color-gray-lighter
    }
  }
  &.container {
    display: flex;
    flex-direction: row;
    align-items: center;
    @include setPropWithRemAndPx(10, padding);
    margin: 0;
    border: 0;
    background: transparent;
    &:hover {
      .unit {
        &[variant~="contact-item-name"] {
          font-weight: 700;
        }
        &[variant~="contact-item-avatar"] {
          .image {
            transform: scale(1.3);
          }
        }
      }
    }
  }
  &.unit {
    @include setPropWithRemAndPx(10, margin);
    &[variant~="contact-item-avatar"] {
      border-radius: 100%;
      overflow: hidden;
      @include setPropWithRemAndPx(80, (min-width, max-width, min-height, max-height));
      .image {
        max-width: 100%;
        max-height: 100%;
        transition: all 0.3s ease;
      }
    }
    &[variant~="contact-item-name"] {
      flex: auto;
      text-align: left;
      @include setPropWithRemAndPx(22, font-size);
      color: $color-gray-darker;
    }
    &[variant~="contact-item-favorite"] {
      @include setPropWithRemAndPx(30, (width, height));
      .icon {
        display: block;
        transition: all 0.3s ease;
        text-align: center;
        @include setPropWithRemAndPx(30, (width, height));
        svg {
          width: 100%;
          height: 100%;
          path {
            fill: $color-gray;
          }
        }
      }
    }
  }
}

.contact-item {
  &.wrapper {
    position: relative;
    flex: 2;
    @include setPropWithRemAndPx(20, (padding: 20, padding-bottom: 130));
    .container {
      position: flex;
      &[variant~="contact-button"] {
        .unit {
          flex-direction: row;
          li {
            a,
            button {
              @include setPropWithRemAndPx(160, width);
            }
          }
        }
      }
    }
  }
  &.container {
    &[variant~="contact-item-header"] {
      display: flex;
      flex-direction: row;
      align-items: center;
    }
    &[variant~="contact-item-body-container"] {
      display: flex;
      flex-direction: column;
      border-bottom: 2px solid darken( $color-gray-lighter, 10%);
      &.is-last {
        border-bottom: 0;
      }
      [variant~="contact-item-body"] {
        display: flex;
        flex-direction: row;
        align-items: center;
        @include setPropWithRemAndPx(10, margin);
        margin-top: 0;
        margin-bottom: 0;
        &:last-child {
          @include setPropWithRemAndPx(20, margin-bottom);
        }
      }
      [variant~="contact-label"] {
        @include setPropWithRemAndPx(120, (min-width, max-width, width));
        @include setPropWithRemAndPx(10, margin-right);
        margin-bottom: 0;
        label {
          display: block;
          font-family: $fontFamily;
          @include setPropWithRemAndPx(18, font-size);
          text-align: right;
          color: darken( $color-gray-lighter, 10%);
        }
      }
      [variant~="textarea"] {
        align-self: flex-start;
        @include setPropWithRemAndPx(10, margin-top);
      }
      [variant~="contact-inputfield"] {
        flex: auto;
        .input {
          font-family: $fontFamily;
          font-weight: 400;
          border: 0;
          width: 100%;
          color: $color-gray-darker;
          @include setPropWithRemAndPx(10, (padding-top: 5, padding-bottom: 5, padding-left: 10, padding-right: 10, font-size: 24));
          background: transparent;
          margin: 0;
          vertical-align: top;
          -webkit-box-shadow: none;
          -moz-box-shadow: none;
          box-shadow: none;
          background-image: none;
          &::placeholder {
            color: $color-gray;
            opacity: 1;
            text-align: center;
          }
          &.textarea {
            color: darken( $color-gray-lighter, 10%);
          }
        }
      }
    }
  }
  &.unit {
    @include setPropWithRemAndPx(10, (margin));
    &[variant~="contact-item-avatar"] {
      @include setPropWithRemAndPx(120, (min-width, min-height, max-height, max-width));
      border-radius: 100%;
      overflow: hidden;
      .image {
        max-width: 100%;
        max-height: 100%;
        transition: all 0.3s ease;
      }
    }
    &[variant~="contact-item-name"] {
      flex: auto;
    }
    &[variant="contact-item-favorite"] {
      @include setPropWithRemAndPx(50, (width, height));
      .icon {
        @include setPropWithRemAndPx(50, (width, height));
        svg {
          width: 100%;
          height: 100%;
          path {
            fill: $color-gray;
          }
        }
      }
    }
  }
}

.custom-input {
  &.container {
    @include setPropWithRemAndPx(10, (padding));
  }
  &[variant~="input-search"] {
    width: 100%;
    border: 1px solid $color-gray;
    border-radius: 5px;
    .input {
      font-family: $fontFamily;
      font-weight: 700;
      border: 0;
      width: 100%;
      @include setPropWithRemAndPx(10, (padding: 10, font-size: 16));
      background: transparent;
      margin: 0;
      vertical-align: top;
      &::placeholder {
        color: $color-gray;
        opacity: 1;
        text-align: center;
      }
    }
  }
}
