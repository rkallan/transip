.container {
  &[variant~="custom-form"] {
    @include transition(opacity 0.6s linear 0s, height 0.4s, overflow 0.5s);
    [variant~="error-message"] {
      color: $color-red;
      background-repeat: no-repeat;
      @include setPropWithRemAndPx(30, (padding-left: 30, background-size: 24, margin-bottom: map-get($grid, gutter)/2, font-size: $bodyTextFontSize, line-height: 24));
      @include background-image('icons/error');
      @include transition(opacity 0.6s linear 0s, height 0.4s, overflow 0.5s);
    }
    [variant~="custom-form-posted"] {
      @include setPropWithRemAndPx(30, (margin-bottom: map-get($grid, gutter)/2, font-size: $bodyTextFontSize, line-height: 24));
      @include transition(opacity 0.6s linear 0s, height 0.4s, overflow 0.5s);
    }
    .form-label {
      @include setPropWithRemAndPx(map-get($grid, gutter)/2, (margin-bottom: map-get($grid, gutter)/2, font-size: $bodyTextFontSize));
    }
    .form-input {
      @include setPropWithRemAndPx(map-get($grid, gutter)/2, margin-bottom);
    }
    .input {
      text-align: left;
      @include setPropWithRemAndPx(20, (padding: 10, border-radius: $borderRadius/2, height: 30));
      background: #fff;
      border: solid 1px $color-grey;
      color: $color-grey;
      width: 100%;
      @include transition(background-color .4s ease, border .4s ease, color .4s ease);
      box-sizing: border-box;
      @include placeholder($color-grey);
      &[variant~="dateselector"] {
        float: left;
        @include setPropWithRemAndPx(40, (width: 45, margin-right: 5));
        text-align: center;
      }
      &:hover,
      &:focus {
        background-color: lighten($color-grey-transparent, 60%);
        color: $color-grey;
        @include placeholder($color-white);
      }
      &[type="date"] {}
      &[type="checkbox"] {
        @include opacity(0);
        @extend %visuallyhidden;
        ~label {
          @include setPropWithRemAndPx(map-get($grid, gutter), padding-left);
          span {
            position: absolute;
            @include setPropWithRemAndPx($docFontSize, (width, height));
            border: 2px solid $color-grey;
            border: calculateRem(2px) solid $color-grey;
            left: 0;
            &:after {
              content: '';
              @include setPropWithRemAndPx(1, (width: 8px, height: 6px, top: 2px, left: 2px, ));
              position: absolute;
              border: 2px solid $color-grey;
              border: calculateRem(2px) solid $color-grey;
              border-top: none;
              border-right: none;
              @include opacity(0);
              @include rotate(-50);
            }
          }
        }
        &:hover,
        &:focus {
          ~label {
            span {
              &:before {
                content: ' ';
                position: absolute;
                @include setPropWithRemAndPx(1, (width: 8px, height: 8px, top: 2, left: 2));
                background: lighten($color-grey-transparent, 60%);
              }
            }
          }
          &:checked {
            ~label {
              span {
                &:before {
                  display: none;
                }
                &:after {
                  border-color: lighten($color-grey-transparent, 60%);
                  ;
                }
              }
            }
          }
        }
        &:checked {
          ~label {
            span {
              &:after {
                opacity: 1;
              }
            }
          }
        }
      }
      &[state*="invalid"] {
        color: $color-white;
        background-color: $color-red;
        @include placeholder($color-white);
      }
    }
  }
}
